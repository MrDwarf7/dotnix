# A TOML linter such as https://taplo.tamasfe.dev/ can use this schema to validate your config.
# If you encounter any issues, please make an issue at https://github.com/yazi-rs/schemas.
"$schema" = "https://yazi-rs.github.io/schemas/keymap.json"

[mgr]

prepend_keymap = [
  { on = "o", run = "open --interactive", desc = "Open Selected files interactively" },
  { on = "O", run = "open", desc = "Open Selected files" },
  { on = "<Enter>", run = "plugin smart-enter", desc = "Enter child dir, or open file" },
  # { on = "<Enter>", run = "@", desc = "EMPTY" },
  { on = "A", run = "create", desc = "Create a file (ends with / for directories)" },
  { on = "Q", run = "quit", desc = "Quit the process" },
  { on = "q", run = "quit --no-cwd-file", desc = "Quit the process without outputting cwd-file" },
  { on = "<C-c>", run = "close", desc = "Close the current tab, or quit if it's last" },
  # { on = [ "c", "c" ], run = "copy path", desc = "Copy the file path" },
  # { on = [ "c", "d" ], run = "copy dirname", desc = "Copy the directory path" },
  # { on = [ "c", "f" ], run = "copy filename", desc = "Copy the filename" },
  # { on = [ "c", "n" ], run = "copy name_without_ext", desc = "Copy the filename without extension" },
  { on = ["y", "f"], run = "copy path", desc = "Copy the file path" },
  { on = ["y", "c"], run = "copy dirname", desc = "Copy the directory path" },
  { on = ["y", "n"], run = "copy filename", desc = "Copy the filename" },
  { on = ["y", "N"], run = "copy name_without_ext", desc = "Copy the filename without extension" },
  { on = ["y", "y"], run = "yank", desc = "Yank selected files (copy)" },
  { on = ["<C-y>"], run = "unyank", desc = "Cancel the yank status" },
  { on = "<Space>", run = "toggle --state=none", desc = "Toggle the current selection state" },
  { on = "V", run = "visual_mode", desc = "Enter visual mode (selection mode)" },
  { on = "v", run = "visual_mode --unset", desc = "Enter visual mode (unset mode)" },
  { on = ["g", "d"], run = "plugin diff", desc = "Diff the selected with the hovered file" },
  { on = ["g", "i"], run = "plugin lazygit", desc = "run lazygit" },
  { on = "l", run = "plugin smart-enter", desc = "Enter the child directory or open the file" },
  # { on = "/", run = "plugin jump-to-char", desc = "Jump to char" },
  { on = ["m", "m"], run = "linemode mtime_better", desc = "Linemode: mtime_better" },
  # { on = [ ",", "m" ], run = [ "sort mtime --reverse=no", "linemode mtime_better" ], desc = "Sort by modified time" },
  # { on = [ ",", "M" ], run = [ "sort mtime --reverse", "linemode mtime_better" ], desc = "Sort by modified time (reverse)" },
  { on = ["1"], run = "plugin relative-motions 1", desc = "Move in relative steps" },
  { on = ["2"], run = "plugin relative-motions 2", desc = "Move in relative steps" },
  { on = ["3"], run = "plugin relative-motions 3", desc = "Move in relative steps" },
  { on = ["4"], run = "plugin relative-motions 4", desc = "Move in relative steps" },
  { on = ["5"], run = "plugin relative-motions 5", desc = "Move in relative steps" },
  { on = ["6"], run = "plugin relative-motions 6", desc = "Move in relative steps" },
  { on = ["7"], run = "plugin relative-motions 7", desc = "Move in relative steps" },
  { on = ["8"], run = "plugin relative-motions 8", desc = "Move in relative steps" },
  { on = ["9"], run = "plugin relative-motions 9", desc = "Move in relative steps" },
  { on = ["C"], run = "plugin ouch zip", desc = "Compress with ouch" },
  { on = ["="], run = "plugin eza-preview", desc = "Toggle tree/list preview" },
]

# keymap = [
#   { on = "~",    run = "help", desc = "Open help" },
#   { on = "<F1>", run = "help", desc = "Open help" },
# ]

[help]
keymap = [
  { on = "<Esc>", run = "escape", desc = "Clear the filter, or hide the help" },
  { on = "<C-[>", run = "escape", desc = "Clear the filter, or hide the help" },
  { on = "q", run = "close", desc = "Exit the process" },
  { on = "<C-c>", run = "close", desc = "Hide the help" },

  # Navigation
  { on = "k", run = "arrow -1", desc = "Move cursor up" },
  { on = "j", run = "arrow 1", desc = "Move cursor down" },

  { on = "<Up>", run = "arrow -1", desc = "Move cursor up" },
  { on = "<Down>", run = "arrow 1", desc = "Move cursor down" },

  # Filtering
  { on = "/", run = "filter", desc = "Apply a filter for the Help items" },
]
